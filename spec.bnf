program = { statement }

statement = declare-statement | assign-statement | print-statement | if-statement | while-statement

declare-statement = "let" identifier ":=" logical-expression

assign-statement = identifier "=" logical-expression

print-statement = "print" logical-expression

if-statement = "if" logical-expression "{" { statement } "}" { else-if-statement } [ else-statement ]

else-if-statement = "else" "if" logical-expression "{" { statement } "}"

else-statement = "else" "{" { statement } "}"

while-statement = "while" logical-expression "{" { statement } "}"

logical-expression = logical-term { "||" logical-term }

logical-term = logical-unary { "&&" logical-unary }

logical-unary = "!" logical-unary | "(" logical-expression ")" | comparison

comparison = expression [ ("==" | "!=" | ">" | ">=" | "<" | "<=") expression ]

expression = term { ("+" | "-") term }

term = unary { ("*" | "/") unary }

unary = "-" unary | factor

factor = postfix

postfix = primary { "[" expression "]" }

primary = number | identifier | "(" expression ")" | string | array-literal | "true" | "false"

array-literal = "[" [ logical-expression { "," logical-expression } ] "]"
